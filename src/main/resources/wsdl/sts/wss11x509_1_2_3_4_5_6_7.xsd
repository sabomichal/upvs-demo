<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified" targetNamespace="http://schemas.xmlsoap.org/ws/2005/02/trust" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wst="http://schemas.xmlsoap.org/ws/2005/02/trust" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
  <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" schemaLocation="wss11x509_1.xsd"/>
  <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" schemaLocation="wss11x509_1_2.xsd"/>
  <xs:import namespace="http://schemas.xmlsoap.org/ws/2004/09/policy" schemaLocation="wss11x509_1_2_3_4_5.xsd"/>
  <xs:import namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" schemaLocation="wss11x509_1_2_3_4_5_6_7_8.xsd"/>
  <xs:element name="RequestSecurityToken" type="wst:RequestSecurityTokenType"/>
  <xs:complexType name="RequestSecurityTokenType">
    <xs:annotation>
      <xs:documentation>
        Actual content model is non-deterministic, hence wildcard. The following shows intended content model:
        <xs:element minOccurs="0" ref="wst:TokenType"/>
        <xs:element ref="wst:RequestType"/>
        <xs:element minOccurs="0" ref="wsp:AppliesTo"/>
        <xs:element minOccurs="0" ref="wst:Claims"/>
        <xs:element minOccurs="0" ref="wst:Entropy"/>
        <xs:element minOccurs="0" ref="wst:Lifetime"/>
        <xs:element minOccurs="0" ref="wst:AllowPostdating"/>
        <xs:element minOccurs="0" ref="wst:Renewing"/>
        <xs:element minOccurs="0" ref="wst:OnBehalfOf"/>
        <xs:element minOccurs="0" ref="wst:Issuer"/>
        <xs:element minOccurs="0" ref="wst:AuthenticationType"/>
        <xs:element minOccurs="0" ref="wst:KeyType"/>
        <xs:element minOccurs="0" ref="wst:KeySize"/>
        <xs:element minOccurs="0" ref="wst:SignatureAlgorithm"/>
        <xs:element minOccurs="0" ref="wst:Encryption"/>
        <xs:element minOccurs="0" ref="wst:EncryptionAlgorithm"/>
        <xs:element minOccurs="0" ref="wst:CanonicalizationAlgorithm"/>
        <xs:element minOccurs="0" ref="wst:ProofEncryption"/>
        <xs:element minOccurs="0" ref="wst:UseKey"/>
        <xs:element minOccurs="0" ref="wst:SignWith"/>
        <xs:element minOccurs="0" ref="wst:EncryptWith"/>
        <xs:element minOccurs="0" ref="wst:DelegateTo"/>
        <xs:element minOccurs="0" ref="wst:Forwardable"/>
        <xs:element minOccurs="0" ref="wst:Delegatable"/>
        <xs:element minOccurs="0" ref="wsp:Policy"/>
        <xs:element minOccurs="0" ref="wsp:PolicyReference"/>
        <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Context" type="xs:anyURI" use="optional"/>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="TokenType" type="xs:anyURI"/>
  <xs:element name="RequestType" type="wst:RequestTypeOpenEnum"/>
  <xs:simpleType name="RequestTypeOpenEnum">
    <xs:union memberTypes="wst:RequestTypeEnum xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RequestTypeEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/Issue"/>
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/Renew"/>
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/Cancel"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RequestSecurityTokenResponse" type="wst:RequestSecurityTokenResponseType"/>
  <xs:complexType name="RequestSecurityTokenResponseType">
    <xs:annotation>
      <xs:documentation>
        Actual content model is non-deterministic, hence wildcard. The following shows intended content model:
        <xs:element minOccurs="0" ref="wst:TokenType"/>
        <xs:element ref="wst:RequestType"/>
        <xs:element minOccurs="0" ref="wst:RequestedSecurityToken"/>
        <xs:element minOccurs="0" ref="wsp:AppliesTo"/>
        <xs:element minOccurs="0" ref="wst:RequestedAttachedReference"/>
        <xs:element minOccurs="0" ref="wst:RequestedUnattachedReference"/>
        <xs:element minOccurs="0" ref="wst:RequestedProofToken"/>
        <xs:element minOccurs="0" ref="wst:Entropy"/>
        <xs:element minOccurs="0" ref="wst:Lifetime"/>
        <xs:element minOccurs="0" ref="wst:Status"/>
        <xs:element minOccurs="0" ref="wst:AllowPostdating"/>
        <xs:element minOccurs="0" ref="wst:Renewing"/>
        <xs:element minOccurs="0" ref="wst:OnBehalfOf"/>
        <xs:element minOccurs="0" ref="wst:Issuer"/>
        <xs:element minOccurs="0" ref="wst:AuthenticationType"/>
        <xs:element minOccurs="0" ref="wst:Authenticator"/>
        <xs:element minOccurs="0" ref="wst:KeyType"/>
        <xs:element minOccurs="0" ref="wst:KeySize"/>
        <xs:element minOccurs="0" ref="wst:SignatureAlgorithm"/>
        <xs:element minOccurs="0" ref="wst:Encryption"/>
        <xs:element minOccurs="0" ref="wst:EncryptionAlgorithm"/>
        <xs:element minOccurs="0" ref="wst:CanonicalizationAlgorithm"/>
        <xs:element minOccurs="0" ref="wst:ProofEncryption"/>
        <xs:element minOccurs="0" ref="wst:UseKey"/>
        <xs:element minOccurs="0" ref="wst:SignWith"/>
        <xs:element minOccurs="0" ref="wst:EncryptWith"/>
        <xs:element minOccurs="0" ref="wst:DelegateTo"/>
        <xs:element minOccurs="0" ref="wst:Forwardable"/>
        <xs:element minOccurs="0" ref="wst:Delegatable"/>
        <xs:element minOccurs="0" ref="wsp:Policy"/>
        <xs:element minOccurs="0" ref="wsp:PolicyReference"/>
        <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Context" type="xs:anyURI" use="optional"/>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="RequestedSecurityToken" type="wst:RequestedSecurityTokenType"/>
  <xs:complexType name="RequestedSecurityTokenType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="BinarySecret" type="wst:BinarySecretType"/>
  <xs:complexType name="BinarySecretType">
    <xs:simpleContent>
      <xs:extension base="xs:base64Binary">
        <xs:attribute name="Type" type="wst:BinarySecretTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="BinarySecretTypeEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/AsymmetricKey"/>
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/SymmetricKey"/>
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/Nonce"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BinarySecretTypeOpenEnum">
    <xs:union memberTypes="wst:BinarySecretTypeEnum xs:anyURI"/>
  </xs:simpleType>
  <xs:element name="Claims" type="wst:ClaimsType"/>
  <xs:complexType name="ClaimsType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Dialect" type="xs:anyURI" use="optional"/>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Entropy" type="wst:EntropyType"/>
  <xs:complexType name="EntropyType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Lifetime" type="wst:LifetimeType"/>
  <xs:complexType name="LifetimeType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="wsu:Created"/>
      <xs:element minOccurs="0" ref="wsu:Expires"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ComputedKey" type="wst:ComputedKeyOpenEnum"/>
  <xs:simpleType name="ComputedKeyEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/CK/PSHA1"/>
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/CK/HASH"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ComputedKeyOpenEnum">
    <xs:union memberTypes="wst:ComputedKeyEnum xs:anyURI"/>
  </xs:simpleType>
  <xs:element name="RequestedAttachedReference" type="wst:RequestedReferenceType"/>
  <xs:element name="RequestedUnattachedReference" type="wst:RequestedReferenceType"/>
  <xs:complexType name="RequestedReferenceType">
    <xs:sequence>
      <xs:element ref="wsse:SecurityTokenReference"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RequestedProofToken" type="wst:RequestedProofTokenType"/>
  <xs:complexType name="RequestedProofTokenType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RequestSecurityTokenResponseCollection" type="wst:RequestSecurityTokenResponseCollectionType"/>
  <xs:complexType name="RequestSecurityTokenResponseCollectionType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="1" ref="wst:RequestSecurityTokenResponse"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="IssuedTokens" type="wst:RequestSecurityTokenResponseCollectionType"/>
  <xs:element name="RenewTarget" type="wst:RenewTargetType"/>
  <xs:complexType name="RenewTargetType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##other"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AllowPostdating" type="wst:AllowPostdatingType"/>
  <xs:complexType name="AllowPostdatingType"/>
  <xs:element name="Renewing" type="wst:RenewingType"/>
  <xs:complexType name="RenewingType">
    <xs:attribute name="Allow" type="xs:boolean" use="optional"/>
    <xs:attribute name="OK" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <xs:element name="CancelTarget" type="wst:CancelTargetType"/>
  <xs:complexType name="CancelTargetType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##other"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RequestedTokenCancelled" type="wst:RequestedTokenCancelledType"/>
  <xs:complexType name="RequestedTokenCancelledType"/>
  <xs:element name="Status" type="wst:StatusType"/>
  <xs:complexType name="StatusType">
    <xs:sequence>
      <xs:element name="Code" type="wst:StatusCodeOpenEnum"/>
      <xs:element minOccurs="0" name="Reason" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="StatusCodeEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/status/valid"/>
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/status/invalid"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StatusCodeOpenEnum">
    <xs:union memberTypes="wst:StatusCodeEnum xs:anyURI"/>
  </xs:simpleType>
  <xs:element name="SignChallenge" type="wst:SignChallengeType"/>
  <xs:element name="SignChallengeResponse" type="wst:SignChallengeType"/>
  <xs:complexType name="SignChallengeType">
    <xs:sequence>
      <xs:element ref="wst:Challenge"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Challenge" type="xs:string"/>
  <xs:element name="BinaryExchange" type="wst:BinaryExchangeType"/>
  <xs:complexType name="BinaryExchangeType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="ValueType" type="xs:anyURI" use="required"/>
        <xs:attribute name="EncodingType" type="xs:anyURI" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="RequestKET" type="wst:RequestKETType"/>
  <xs:complexType name="RequestKETType"/>
  <xs:element name="KeyExchangeToken" type="wst:KeyExchangeTokenType"/>
  <xs:complexType name="KeyExchangeTokenType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Authenticator" type="wst:AuthenticatorType"/>
  <xs:complexType name="AuthenticatorType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="wst:CombinedHash"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CombinedHash" type="xs:base64Binary"/>
  <xs:element name="OnBehalfOf" type="wst:OnBehalfOfType"/>
  <xs:complexType name="OnBehalfOfType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Issuer" type="wsa:EndpointReferenceType"/>
  <xs:element name="AuthenticationType" type="xs:anyURI"/>
  <xs:element name="KeyType" type="wst:KeyTypeOpenEnum"/>
  <xs:simpleType name="KeyTypeEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/PublicKey"/>
      <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/SymmetricKey"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="KeyTypeOpenEnum">
    <xs:union memberTypes="wst:KeyTypeEnum xs:anyURI"/>
  </xs:simpleType>
  <xs:element name="KeySize" type="xs:unsignedInt"/>
  <xs:element name="SignatureAlgorithm" type="xs:anyURI"/>
  <xs:element name="EncryptionAlgorithm" type="xs:anyURI"/>
  <xs:element name="CanonicalizationAlgorithm" type="xs:anyURI"/>
  <xs:element name="ComputedKeyAlgorithm" type="xs:anyURI"/>
  <xs:element name="Encryption" type="wst:EncryptionType"/>
  <xs:complexType name="EncryptionType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ProofEncryption" type="wst:ProofEncryptionType"/>
  <xs:complexType name="ProofEncryptionType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="UseKey" type="wst:UseKeyType"/>
  <xs:complexType name="UseKeyType">
    <xs:sequence>
      <xs:any minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="Sig" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="SignWith" type="xs:anyURI"/>
  <xs:element name="EncryptWith" type="xs:anyURI"/>
  <xs:element name="DelegateTo" type="wst:DelegateToType"/>
  <xs:complexType name="DelegateToType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Forwardable" type="xs:boolean"/>
  <xs:element name="Delegatable" type="xs:boolean"/>
  <xs:element name="Participants" type="wst:ParticipantsType"/>
  <xs:complexType name="ParticipantsType">
    <xs:sequence>
      <xs:element minOccurs="0" name="Primary" type="wst:ParticipantType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Participant" type="wst:ParticipantType"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ParticipantType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>